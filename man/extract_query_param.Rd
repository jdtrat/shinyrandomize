% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query-helpers.R
\name{extract_query_param}
\alias{extract_query_param}
\title{Extract parameters ID from query string}
\usage{
extract_query_param(param, active_session = TRUE, query_string)
}
\arguments{
\item{param}{The query parameter whose value should be retrieved.}

\item{active_session}{LOGICAL: TRUE (default) for use in interactive shiny
sessions. FALSE for parsing a character string supplied by \code{query_string}
with query parameters.}

\item{query_string}{If not run in an active session, the character string
containing query parameters to parse.}
}
\value{
The value from the requested query parameter.
}
\description{
This function is useful for parsing individual parameters from a query
string. It can be used both outside of and within a Shiny application.
}
\details{
For use outside of a Shiny application, \code{extract_query_param()} is most
similar to \code{\link[shiny:parseQueryString]{shiny::parseQueryString()}}, and within a Shiny application, it is
most similar to \code{\link[shiny:getQueryString]{shiny::getQueryString()}}. Both shiny functions return named
lists of all query parameters and their values. In contrast,
\code{extract_query_param()} returns a character string representing the value of
the supplied parameter.
}
\examples{

# Outside of a Shiny application

extract_query_param(param = "best_cat",
                    active_session = FALSE,
                    query_string = "?person=jdt&favorite_food=sushi&best_cat=tucker")


# Within a Shiny application

if (interactive()) {

library(shiny)
library(shinyrandomize)

ui <- fluidPage(
  textInput("extractingParam", "Which parameter do you want to extract?"),
  verbatimTextOutput("query")
)

server <- function(input, output, session) {

  # On start up, insert the following query string:
  # "?person=jdt&favorite_food=sushi&best_cat=tucker"
  observe({
    if (session$clientData$url_search == "") {
      insert_query_param(param = c("person", "favorite_food", "best_cat"),
                         value = c("jdt", "sushi", "tucker"))
    }
  })

  # When one of the query parameters, 'person', 'food',
  # or 'best_cat' is specified, extract and show it.
  # The output will only appear for a valid parameter.
  observeEvent(input$extractingParam, {
    output$query <- renderText({
      extract_query_param(param = input$extractingParam)
    })
  })

}

shinyApp(ui, server)

}


}
\seealso{
Other Query Strings: 
\code{\link{format_query_param}()},
\code{\link{insert_query_param}()}
}
\concept{Query Strings}
