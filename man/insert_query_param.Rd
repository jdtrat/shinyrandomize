% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query-helpers.R
\name{insert_query_param}
\alias{insert_query_param}
\title{Insert Query Parameters and Values}
\usage{
insert_query_param(param, value, mode = "append")
}
\arguments{
\item{param}{The parameter name. Can be a character string, e.g. "userID", or
a character vector, such as c("userID", "favorite_food").}

\item{value}{The parameter value. Can be a character string, "jdtrat", or a
character vector, such as c("jdtrat", "sushi").}

\item{mode}{Either "append" (default) to add a new query parameter/value pair
to the existing URL or "replace" to replace any existing query
parameters/values with new ones.}
}
\value{
NA; used for side effects to insert query strings in a Shiny application's URL.
}
\description{
This function can be used to insert query parameters and values into the URL.
This function wraps \code{\link[shiny:updateQueryString]{shiny::updateQueryString()}}, allowing individual
character strings or character vectors to be appended (default) or replace existing URL
query strings.
}
\examples{

if (interactive()) {

  library(shiny)

  ui <- fluidPage(
    actionButton("appendParam", "Append Query Parameters"),
    actionButton("replaceParam", "Replace Query Parameters"),
    verbatimTextOutput("query")
  )

  server <- function(input, output, session) {

    observe({

      # On start up, insert the following query string:
      # "?person=jdt&food=sushi&best_cat=tucker"
      if (session$clientData$url_search == "") {
        insert_query_param(param = "startup-message",
                           value = "hello-world")
      }

      # print all query params
      output$query <- renderText({
        query_values <- vapply(
          parseQueryString(session$clientData$url_search),
          function(x) x, character(1)
        )
        query_params <- names(query_values)
        paste0(query_params, ": ", query_values, "\n")
      })
    })

    observeEvent(input$appendParam, {

      insert_query_param(param = c("person", "food", "best_cat"),
                         value = c("jdt", "sushi", "tucker"),
                         mode = "append")
    })

    observeEvent(input$replaceParam, {
      insert_query_param(param = "package",
                         value = "shinyrandomize",
                         mode = "replace")
    })

  }

  shinyApp(ui, server)

}

}
\seealso{
Other Query Strings: 
\code{\link{extract_query_param}()},
\code{\link{format_query_param}()}
}
\concept{Query Strings}
